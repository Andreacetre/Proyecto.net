@model TeoSoft.Models.Venta

@{
    ViewData["Title"] = "Crear Venta";
}

<h1 class="text-center"><i class="fas fa-plus-circle"></i> Crear Venta</h1>

<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card">
            <div class="card-body">
                <form id="createVentaForm" asp-action="Create">
                    @Html.AntiForgeryToken()
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="form-group">
                        <label asp-for="ClienteId" class="control-label"></label>
                        <select asp-for="ClienteId" class="form-control" asp-items="ViewBag.ClienteId" required>
                            <option value="">-- Seleccione un cliente --</option>
                        </select>
                        <span asp-validation-for="ClienteId" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="IdProducto" class="control-label"></label>
                        <select asp-for="IdProducto" class="form-control" asp-items="ViewBag.IdProducto" required>
                            <option value="">-- Seleccione un producto --</option>
                        </select>
                        <span asp-validation-for="IdProducto" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Cantidad" class="control-label"></label>
                        <input asp-for="Cantidad" class="form-control" type="number" min="1" required />
                        <span asp-validation-for="Cantidad" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Total" class="control-label"></label>
                        <input asp-for="Total" class="form-control" type="number" step="0.01" readonly />
                        <span asp-validation-for="Total" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Estado" class="control-label"></label>
                        <select asp-for="Estado" class="form-control" required>
                            <option value="Pendiente">Pendiente</option>
                            <option value="Completada">Completada</option>
                            <option value="Anulada">Anulada</option>
                        </select>
                        <span asp-validation-for="Estado" class="text-danger"></span>
                    </div>

                    <div class="form-group text-center mt-4">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> Crear
                        </button>
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Volver
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        $(document).ready(function () {
            function actualizarTotal() {
                var productId = $('#IdProducto').val();
                var cantidad = $('#Cantidad').val();

                if (productId && cantidad > 0) {
                    $.get('@Url.Action("GetProductPrice", "Ventas")', { id: productId })
                        .done(function(response) {
                            if (response && response.price) {
                                var total = parseFloat(response.price) * parseInt(cantidad);
                                $('#Total').val(total.toFixed(2));
                            }
                        })
                        .fail(function() {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Error al obtener el precio del producto'
                            });
                        });
                }
            }

            $('#IdProducto, #Cantidad').change(actualizarTotal);

            $('#createVentaForm').on('submit', function(e) {
                e.preventDefault();
                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: $(this).serialize(),
                    success: function(result) {
                        if (result.success) {
                            Swal.fire({
                                icon: 'success',
                                title: '¡Éxito!',
                                text: result.message,
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.href = '@Url.Action("Index")';
                                }
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: result.message
                            });
                        }
                    },
                    error: function() {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Ha ocurrido un error al procesar la solicitud.'
                        });
                    }
                });
            });
        });
    </script>
}

